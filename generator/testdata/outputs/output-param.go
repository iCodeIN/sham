// Code generated by sham. DO NOT EDIT.
// https://github.com/jmalloc/sham

package outputs

import inputs "github.com/jmalloc/sham/generator/testdata/inputs"

// OutputParam is a test implementation of the inputs.OutputParam interface.
type OutputParam struct {
	// OutputParam is the default implementation of the interface.
	// If it is nil, each method will return an error (or panic).
	inputs.OutputParam

	// AnonFunc is an implementation of the Anon() method.
	// If it is non-nil, it takes precedence over the embedded OutputParam interface.
	AnonFunc func() int

	// SingleFunc is an implementation of the Single() method.
	// If it is non-nil, it takes precedence over the embedded OutputParam interface.
	SingleFunc func() int

	// MultipleFunc is an implementation of the Multiple() method.
	// If it is non-nil, it takes precedence over the embedded OutputParam interface.
	MultipleFunc func() (int, float64)

	// MultipleNamesFunc is an implementation of the MultipleNames() method.
	// If it is non-nil, it takes precedence over the embedded OutputParam interface.
	MultipleNamesFunc func() (int, int, float64, float64)

	// ReceiverCollisionFunc is an implementation of the ReceiverCollision() method.
	// If it is non-nil, it takes precedence over the embedded OutputParam interface.
	ReceiverCollisionFunc func() int
}

func (x *OutputParam) Anon() int {
	if x.AnonFunc != nil {
		return x.AnonFunc()
	}

	if x.OutputParam != nil {
		return x.OutputParam.Anon()
	}

	panic("Anon() has no implementation, set the OutputParam or AnonFunc field")
}

func (x *OutputParam) Single() (a int) {
	if x.SingleFunc != nil {
		return x.SingleFunc()
	}

	if x.OutputParam != nil {
		return x.OutputParam.Single()
	}

	panic("Single() has no implementation, set the OutputParam or SingleFunc field")
}

func (x *OutputParam) Multiple() (a int, b float64) {
	if x.MultipleFunc != nil {
		return x.MultipleFunc()
	}

	if x.OutputParam != nil {
		return x.OutputParam.Multiple()
	}

	panic("Multiple() has no implementation, set the OutputParam or MultipleFunc field")
}

func (x *OutputParam) MultipleNames() (a, b int, c, d float64) {
	if x.MultipleNamesFunc != nil {
		return x.MultipleNamesFunc()
	}

	if x.OutputParam != nil {
		return x.OutputParam.MultipleNames()
	}

	panic("MultipleNames() has no implementation, set the OutputParam or MultipleNamesFunc field")
}

func (x0 *OutputParam) ReceiverCollision() (x int) {
	if x0.ReceiverCollisionFunc != nil {
		return x0.ReceiverCollisionFunc()
	}

	if x0.OutputParam != nil {
		return x0.OutputParam.ReceiverCollision()
	}

	panic("ReceiverCollision() has no implementation, set the OutputParam or ReceiverCollisionFunc field")
}
